name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

env:
  NFT_DIFF: "pdiff"
  NFT_DIFF_ARGS: "--line-numbers --expand-tabs=2"
  NFT_VER: "0.8.4"
  NFT_WORKDIR: "~"
  NXF_ANSI_LOG: false
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true
jobs:
  nf-test-changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      nf_test_files: ${{ steps.list.outputs.nf_test_files }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gitpython pyyaml

      - name: list nf_test_files
        id: list
        run: |
          echo nf_test_files=$(python \
            .github/python/find_changed_files.py \
            -t pipeline workflow process \
            --head_ref ${{ github.sha }} \
            --base_ref origin/${{ github.base_ref }} \
          ) >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.list.outputs.nf_test_files }}

  test:
    name: "Run pipeline with test data (${{ matrix.nf_test_files }} ${{ matrix.profile }} NF-${{ matrix.NXF_VER }})"
    needs: [nf-test-changes]
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: "${{ ((github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/riboseq')) && needs.nf-test-changes.outputs.nf_test_files != '[]') }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NXF_VER:
          - "24.04.2"
          - "latest-everything"
        profile:
          - "conda"
          - "docker"
          - "singularity"
        isMaster:
          - ${{ github.base_ref == 'master' }}
        # Exclude conda and singularity on dev
        nf_test_files: ["${{ fromJson(needs.nf-test-changes.outputs.nf_test_files) }}"]
        exclude:
          - isMaster: false
            profile: "conda"
          - isMaster: false
            profile: "singularity"
          - nf_test_files: "subworkflows/nf-core/utils_nfschema_plugin/tests/main.nf.test"
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Set up nf-test
        uses: nf-core/setup-nf-test@v1
        with:
          version: ${{ env.NFT_VER }}

      - name: Set up Apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@main

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        run: |
          mkdir -p $NXF_SINGULARITY_CACHEDIR
          mkdir -p $NXF_SINGULARITY_LIBRARYDIR

      - name: Cache pdiff
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        id: cache-pip-pdiff
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pdiff

      - name: Set up pdiff to see diff between nf-test snapshots
        run: |
          python -m pip install --upgrade pip
          pip install pdiff cryptography

      - name: Set up Miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@a4260408e20b96e80095f42ff7f1a15b27dd94ca # v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          conda-solver: libmamba
          channels: conda-forge,bioconda

      - name: Set up Conda
        if: matrix.profile == 'conda'
        run: |
          echo $(realpath $CONDA)/condabin >> $GITHUB_PATH
          echo $(realpath python) >> $GITHUB_PATH

      - name: Disk space cleanup
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1

      - name: Run nf-test
        run: |
          nf-test test --verbose ${{ matrix.nf_test_files }} --profile "+${{ matrix.profile }}" --junitxml=test.xml --tap=test.tap

      - uses: pcolby/tap-summary@v1
        with:
          path: >-
            test.tap

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always ${{ github.workspace }}/.nf-test/tests/*/meta/nextflow.log

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: test.xml

  confirm-pass:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: All tests ok
        if: ${{ success() || !contains(needs.*.result, 'failure') }}
        run: exit 0
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: debug-print
        if: always()
        run: |
          echo "toJSON(needs) = ${{ toJSON(needs) }}"
          echo "toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
